{"ast":null,"code":"var _jsxFileName = \"D:\\\\facultate\\\\An 2\\\\sem1\\\\TW\\\\weather\\\\proiect-html-css-javascript-constantintudurache\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Search from \"./components/search/search\";\nimport \"./App.css\";\nimport CurrentWeather from \"./components/current-weather/weather\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport { useState } from \"react\";\nimport Forecast from \"./components/forecast/forecast\";\nimport { PHOTO_API_URL, PHOTO_API_KEY } from \"./api\";\nimport Photo from \"./components/city-photos/city-photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [photo, setPhoto] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(` ${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const photoFetch = fetch(`${PHOTO_API_URL}?query=Bucharest`, {\n      headers: {\n        Authorization: PHOTO_API_KEY\n      }\n    });\n    Promise.all([currentWeatherFetch, forecastFetch, photoFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      const photoResponse = await response[2].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n      setPhoto({\n        city: searchData.label,\n        ...photoResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  console.log(photo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), photo && /*#__PURE__*/_jsxDEV(Photo, {\n      data: photo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qk+M2iLGQ/4JkeSgMb9sDl1iiok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","useState","Forecast","PHOTO_API_URL","PHOTO_API_KEY","Photo","App","currentWeather","setCurrentWeather","forecast","setForecast","photo","setPhoto","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","photoFetch","headers","Authorization","Promise","all","then","response","weatherResponse","json","forecastResponse","photoResponse","city","label","catch","err","console","log"],"sources":["D:/facultate/An 2/sem1/TW/weather/proiect-html-css-javascript-constantintudurache/src/App.js"],"sourcesContent":["import Search from \"./components/search/search\";\nimport \"./App.css\";\nimport CurrentWeather from \"./components/current-weather/weather\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport { useState } from \"react\";\nimport Forecast from \"./components/forecast/forecast\";\nimport { PHOTO_API_URL, PHOTO_API_KEY } from \"./api\";\nimport Photo from \"./components/city-photos/city-photos\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [photo, setPhoto] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forecastFetch = fetch(\n      ` ${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const photoFetch = fetch(`${PHOTO_API_URL}?query=Bucharest`, {\n        headers: {\n          Authorization: PHOTO_API_KEY,\n        },\n      });  \n\n    Promise.all([currentWeatherFetch, forecastFetch, photoFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n        const photoResponse = await response[2].json();\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n        setPhoto({city: searchData.label, ...photoResponse});\n      })\n      .catch((err) => console.log(err));\n  };\n\n  console.log(currentWeather);\n  console.log(forecast);\n  console.log(photo);\n\n  return (\n    <div id=\"root\">\n      <Search onSearchChange={handleOnSearchChange} />\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n      {forecast && <Forecast data={forecast}/>}\n      {photo && <Photo data={photo}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,sCAAsC;AACjE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,aAAa,EAAEC,aAAa,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,sCAAsC;AAAC;AAEzD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMC,mBAAmB,GAAGC,KAAK,CAC9B,GAAErB,eAAgB,gBAAegB,GAAI,QAAOC,GAAI,UAAShB,eAAgB,eAAc,CACzF;IACD,MAAMqB,aAAa,GAAGD,KAAK,CACxB,IAAGrB,eAAgB,iBAAgBgB,GAAI,QAAOC,GAAI,UAAShB,eAAgB,eAAc,CAC3F;IACD,MAAMsB,UAAU,GAAGF,KAAK,CAAE,GAAEjB,aAAc,kBAAiB,EAAE;MACzDoB,OAAO,EAAE;QACPC,aAAa,EAAEpB;MACjB;IACF,CAAC,CAAC;IAEJqB,OAAO,CAACC,GAAG,CAAC,CAACP,mBAAmB,EAAEE,aAAa,EAAEC,UAAU,CAAC,CAAC,CAC1DK,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MACjD,MAAME,aAAa,GAAG,MAAMJ,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAC9CtB,iBAAiB,CAAC;QAAEyB,IAAI,EAAEnB,UAAU,CAACoB,KAAK;QAAE,GAAGL;MAAgB,CAAC,CAAC;MACjEnB,WAAW,CAAC;QAAEuB,IAAI,EAAEnB,UAAU,CAACoB,KAAK;QAAE,GAAGH;MAAiB,CAAC,CAAC;MAC5DnB,QAAQ,CAAC;QAACqB,IAAI,EAAEnB,UAAU,CAACoB,KAAK;QAAE,GAAGF;MAAa,CAAC,CAAC;IACtD,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC/B,cAAc,CAAC;EAC3B8B,OAAO,CAACC,GAAG,CAAC7B,QAAQ,CAAC;EACrB4B,OAAO,CAACC,GAAG,CAAC3B,KAAK,CAAC;EAElB,oBACE;IAAK,EAAE,EAAC,MAAM;IAAA,wBACZ,QAAC,MAAM;MAAC,cAAc,EAAEE;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAG,EAC/CN,cAAc,iBAAI,QAAC,cAAc;MAAC,IAAI,EAAEA;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,EAC1DE,QAAQ,iBAAI,QAAC,QAAQ;MAAC,IAAI,EAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,EACvCE,KAAK,iBAAI,QAAC,KAAK;MAAC,IAAI,EAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEV;AAAC,GA5CQL,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}